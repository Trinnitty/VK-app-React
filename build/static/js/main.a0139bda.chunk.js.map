{"version":3,"sources":["actions/PageAction.js","reducers/page.js","actions/UserActions.js","reducers/user.js","reducers/index.js","store/configureStore.js","components/User.js","containers/UserContainer.js","components/Pages.js","containers/PageContainer.js","containers/App.js","serviceWorker.js","index.js"],"names":["GET_PHOTOS_REQUEST","GET_PHOTOS_SUCCESS","GET_PHOTOS_FAIL","initialState","year","photos","error","isFetching","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","name","rootReducer","combineReducers","page","state","arguments","length","undefined","action","type","Object","objectSpread","payload","message","user","store","createStore","applyMiddleware","thunk","logger","User","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderTemplate","_this$props","props","react_default","a","createElement","className","onClick","handleLogin","inherits","createClass","key","value","React","Component","UserContainer","handleLoginAction","User_User","connect","dispatch","VK","Auth","login","r","session","username","first_name","Error","Page","onBtnClick","e","currentTarget","innerText","setYear","renderButtonLastFiveYears","currentYear","Date","getFullYear","years","i","push","map","item","displayOutput","index","id","src","sizes","url","alt","likes","count","PageContainer","getPhotosActions","Pages_Page","Api","v","extended","photosOfYear","response","items","forEach","arr","date","sort","b","_unused","getPhotos","App","_Component","containers_PageContainer","containers_UserContainer","Boolean","window","location","hostname","match","ReactDOM","render","react_redux_es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0139bda.chunk.js","sourcesContent":["export const GET_PHOTOS_REQUEST = \"GET_PHOTOS_REQUEST\";\r\nexport const GET_PHOTOS_SUCCESS = \"GET_PHOTOS_SUCCESS\";\r\nexport const GET_PHOTOS_FAIL = \"GET_PHOTOS_FAIL\";\r\n\r\nexport function getPhotos(year) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PHOTOS_REQUEST,\r\n      payload: year\r\n    });\r\n\r\n    //eslint-disable-next-line no-undef\r\n    VK.Api.call(\r\n      \"photos.getAll\",\r\n      {\r\n        v: 5.92,\r\n        extended: 1,\r\n        count: 200\r\n      },\r\n      r => {\r\n        try {\r\n          let photosOfYear = [];\r\n          r.response.items.forEach((item, i, arr) => {\r\n            if (new Date(item.date * 1000).getFullYear() === year) {\r\n              photosOfYear.push(item);\r\n            }\r\n          });\r\n          photosOfYear.sort((a, b) => {\r\n            return a.likes.count - b.likes.count;\r\n          });\r\n\r\n          dispatch({\r\n            type: GET_PHOTOS_SUCCESS,\r\n            payload: photosOfYear\r\n          });\r\n        } catch {\r\n          dispatch({\r\n            type: GET_PHOTOS_FAIL,\r\n            error: true,\r\n            payload: new Error(\"Fail to load photos\")\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n}\r\n","import {\r\n  GET_PHOTOS_REQUEST,\r\n  GET_PHOTOS_SUCCESS,\r\n  GET_PHOTOS_FAIL\r\n} from \"../actions/PageAction\";\r\n\r\nconst initialState = {\r\n  year: 0,\r\n  photos: [],\r\n  error: false,\r\n  isFetching: false // изначально статус загрузки - ложь\r\n  // так как он станет true, когда запрос начнет выполнение\r\n};\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PHOTOS_REQUEST:\r\n      return { ...state, year: action.payload, isFetching: true };\r\n\r\n    case GET_PHOTOS_SUCCESS:\r\n      return { ...state, photos: action.payload, isFetching: false };\r\n\r\n    case GET_PHOTOS_FAIL:\r\n      return {\r\n        ...state,\r\n        photos: [],\r\n        isFetching: false,\r\n        error: action.payload.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport function handleLogin() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: LOGIN_REQUEST\r\n    });\r\n\r\n    //eslint-disable-next-line no-undef\r\n    VK.Auth.login(r => {\r\n      if (r.session) {\r\n        let username = r.session.user.first_name;\r\n\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: username\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          error: true,\r\n          payload: new Error(\"Ошибка авторизации\")\r\n        });\r\n      }\r\n    }, 4); // запрос прав на доступ к photo\r\n  };\r\n}\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL\r\n} from \"../actions/UserActions\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  error: \"\", // добавили для сохранения текста ошибки\r\n  isFetching: false // добавили для реакции на статус \"загружаю\" или нет\r\n};\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return { ...state, isFetching: true, error: \"\" };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, name: action.payload };\r\n\r\n    case LOGIN_FAIL:\r\n      return { ...state, isFetching: false, error: action.payload.message };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { pageReducer } from \"./page\";\r\nimport { userReducer } from \"./user\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  page: pageReducer,\r\n  user: userReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class User extends React.Component {\r\n  renderTemplate = () => {\r\n    const { name, error, isFetching } = this.props;\r\n\r\n    if (error) {\r\n      return <p>Во время запроса произошла ошибка, обновите страницу</p>;\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Загружаю...</p>;\r\n    }\r\n\r\n    if (name) {\r\n      return <p>Привет, {name}!</p>;\r\n    } else {\r\n      return (\r\n        <button className=\"btn\" onClick={this.props.handleLogin}>\r\n          Войти\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return <div className=\"ib user\">{this.renderTemplate()}</div>;\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  handleLogin: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { User } from \"../components/User\";\r\nimport { handleLogin } from \"../actions/UserActions\";\r\n\r\nclass UserContainer extends Component {\r\n  render() {\r\n    const { user, handleLoginAction } = this.props;\r\n    return (\r\n      <User\r\n        name={user.name}\r\n        error={user.error}\r\n        isFetching={user.isFetching}\r\n        handleLogin={handleLoginAction}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleLoginAction: () => dispatch(handleLogin())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Page extends React.Component {\r\n  onBtnClick = e => {\r\n    const year = +e.currentTarget.innerText;\r\n    this.props.setYear(year);\r\n  };\r\n\r\n  renderButtonLastFiveYears = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    const years = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      years.push(currentYear - i);\r\n    }\r\n    return years.map(item => {\r\n      return (\r\n        <button key={item} className=\"btn\" onClick={this.onBtnClick}>\r\n          {item}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  displayOutput = () => {\r\n    const { error, photos, isFetching, year } = this.props;\r\n\r\n    if (error) {\r\n      return <p>{error}</p>;\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>LOADING....</p>;\r\n    }\r\n    if (photos.length) {\r\n      return photos.map((item, index) => (\r\n        <div className=\"page-photo\" key={item.id}>\r\n          <img src={item.sizes[1].url} alt=\"альтернативный текст\" />\r\n          <p>Likes {item.likes.count}</p>\r\n        </div>\r\n      ));\r\n    } else if (photos.length === 0 && year) {\r\n      return <p>No photos....</p>;\r\n    }\r\n  };\r\n  render() {\r\n    const { year } = this.props;\r\n    return (\r\n      <div className=\"page\">\r\n        <div>{this.renderButtonLastFiveYears()}</div>\r\n\r\n        {year ? (\r\n          <p className=\"page-column\">{year} год</p>\r\n        ) : (\r\n          <p className=\"page-column\">\r\n            Choose year photo of which are you interested to see\r\n          </p>\r\n        )}\r\n        <div className=\"photos-row\"> {this.displayOutput()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPage.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  photos: PropTypes.array.isRequired,\r\n  setYear: PropTypes.func.isRequired,\r\n  isFetching: PropTypes.bool.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Page } from \"../components/Pages\";\r\nimport { getPhotos } from \"../actions/PageAction\";\r\n\r\nclass PageContainer extends Component {\r\n  render() {\r\n    const { page, getPhotosActions } = this.props;\r\n\r\n    return (\r\n      <Page\r\n        photos={page.photos}\r\n        year={page.year}\r\n        isFetching={page.isFetching}\r\n        setYear={getPhotosActions}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    page: state.page\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPhotosActions: year => dispatch(getPhotos(year))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PageContainer);\r\n","import React, { Component } from \"react\";\nimport UserContainer from \"../containers/UserContainer\";\nimport PageContainer from \"../containers/PageContainer\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">My top photos from VK</h1>\n        </header>\n\n        <main>\n          <PageContainer />\n          <UserContainer />\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport { App } from \"../src/containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}